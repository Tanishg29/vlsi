library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity FIFO_4x8 is
Port ( rst : in STD_LOGIC;
clk : in STD_LOGIC;
addr : in STD_LOGIC_VECTOR (1 downto 0) := "00";
d_in : in STD_LOGIC_VECTOR (7 downto 0);
rd_wr : in STD_LOGIC;
d_out : out STD_LOGIC_VECTOR (7 downto 0) := "00000000";
empty : out STD_LOGIC := '1';
full : out STD_LOGIC := '0');
end FIFO_4x8;
architecture FIFO_4x8_arch of FIFO_4x8 is
TYPE mem IS ARRAY(3 DOWNTO 0) OF STD_LOGIC_VECTOR (7 DOWNTO 0);
SIGNAL memory : mem := (others=>(others=>'0'));
begin
PROCESS(rst, clk, addr, d_in, rd_wr)
begin
if rst = '1' then
d_out <= "00000000";
empty <= '1';
full <= '0';
memory <= (others=>(others=>'0'));

elsif falling_edge(clk) then
case rd_wr is

when '0' =>
d_out <= memory(conv_integer(addr));
empty <= '0';

full <= '1';
when others =>
memory(conv_integer(addr)) <= d_in;
empty <= '0';
if addr = "11" then

COMPILED BY V.L.S.D.T. TEAM , DEPT. OF E&TC ENGG. , P.I.C.T. , PUNE-43 4

full <= '1';
else
full <= '0';
end if;

end case;
end if;
end process;
end FIFO_4x8_arch;


test bench

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
ENTITY mod25_tb IS
END mod25_tb;
ARCHITECTURE behavior OF mod25_tb IS
 -- Component Declaration for the Unit Under Test (UUT)
 COMPONENT mod25
 PORT(
 rst : IN std_logic;
pr : IN std_logic;
 clk : IN std_logic;
 dir : IN std_logic;
 Q : OUT std_logic_vector(4 downto 0)
 );
 END COMPONENT;

 --Inputs
COMPILED BY V.L.S.D.T. TEAM , DEPT. OF E&TC ENGG. , P.I.C.T. , PUNE-43 9
 signal rst : std_logic := '0';
signal pr : std_logic := '0';
 signal clk : std_logic := '0';
 signal dir : std_logic := '0';
--Outputs
 signal Q : std_logic_vector(4 downto 0);
 -- Clock period definitions
 constant clk_period : time := 10 ns;
BEGIN
-- Instantiate the Unit Under Test (UUT)
 uut: mod25 PORT MAP (
 rst => rst,
pr => pr,
 clk => clk,
 dir => dir,
 Q => Q
 );
 -- Clock process definitions
 clk_process :process
 begin
clk <= '0';
wait for clk_period/2;
clk <= '1';
wait for clk_period/2;
 end process;
 -- Stimulus process
stim_proc_dir: process
 begin

dir <= not(dir);
wait for 320 ns;
end process;
 stim_proc_rst: process
 begin
 wait for 680 ns;
rst <= '1';
wait for 40 ns;
rst <= '0';
wait;
end process;
COMPILED BY V.L.S.D.T. TEAM , DEPT. OF E&TC ENGG. , P.I.C.T. , PUNE-43 10
stim_proc_pr: process
 begin
 wait for 750 ns;
pr <= '1';
wait for 40 ns;
pr <= '0';
wait;
end process;
END;

pin
# PlanAhead Generated physical constraints
NET "Q[4]" LOC = P164;
NET "Q[3]" LOC = P162;
NET "Q[2]" LOC = P161;
NET "Q[1]" LOC = P160;
NET "Q[0]" LOC = P153;
NET "clk" LOC = P132;
NET "dir" LOC = P202;
NET "pr" LOC = P204;
NET "rst" LOC = P194;